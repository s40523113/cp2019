var tipuesearch = {"pages": [{'title': 'About', 'text': '\n \n  取 Dart 程式的按鈕  \n 純 Dart 程式 \n Hello   For Loop   Sum   Runge-Kutta   RK ex1   Mass Spring Damping \n Html 程式 \n ROC Flag   Grid   Slithery \n Flutter 程式 \n Flutter1   Flutter2   Flutter3 \n  內建放入的 Dart 原始碼  \n 放大   回復 \n \n 個人倉儲: https://github.com/s40523113/cp2019 \n dartpad網站: https://dartpad.dev/ \n', 'tags': '', 'url': 'About.html'}, {'title': '每週進度', 'text': '', 'tags': '', 'url': '每週進度.html'}, {'title': 'w3', 'text': '\n hello原始碼: \n void main() {\n    print("hello");\n} \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '將圖片嵌入置網頁 \n \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w6', 'text': '\n for迴圈原始碼 \n // 在所有函式定義外圍所宣告的變數, 稱為全域變數, 有效範圍包含各函式內部與外部\n// for 迴圈所使用的索引值, 宣告為整數 (integer)\nint i;\n// 累加起始值 start 宣告為整數, 且設為 1\nint start = 1;\n// 累加終止值 end 宣告為整數, 且設為 10\nint end = 10;\n// 累加總數值 sum 宣告為整數\nint sum;\n\n// 定義 main() 主函式內容, 目的在利用 for 迴圈進行整數的累加\nmain(){\n  // 將前面已經宣告為全域整數的變數 sum 設為 0, 表示從 0 開始進行累加\n  sum = 0;\n  // 執行 for 迴圈內的整數累加設計, 使用前面已經宣告為全域整數的 i 作為索引變數\n  // 分別從 start 開始累加至 end, 且每次迴圈的索引值增加 1\n  for(i=start;i <= end ;i++){\n    // 當索引變數 i 所對應的值小於或等於 end 時, 對 sum 變數加上 i\n    sum += i;\n    // 可以在 for 迴圈每一個階段運算時, 列出當時的 sum 對應值, 查驗是否正確\n    //print("$sum");\n  }\n  // for 迴圈累加完成後, 列出最後訊息\n  print(\'從 $start 累加至 $end 的總數值為 $sum\');\n} \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w8', 'text': '建立個人網誌 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w11', 'text': '1.溫度轉換程式 \n \n 2.證明已將網頁原始碼裡的mdecourse改為s40523113 \n \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '1.試讀取 ["20C", "30C", "50F", "40C", "23F"] 數列資料 \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'w14', 'text': '利用 dart2js 將 roc_flag.dart 轉為 Javascript \n \n 已成功轉為Javascript \n \n 以下為程式碼 \n \n \n', 'tags': '', 'url': 'w14.html'}, {'title': 'W16 查驗考試', 'text': '進度報告 \n \n 畫出美國國旗 \n \n //先導入html檔，且將embed程式碼改為embed-html.\nimport \'dart:html\';\nimport \'dart:math\' as Math;\n\n//建立canvas，並設定國旗的長寬\nCanvasElement canvas;\nCanvasRenderingContext2D ctx;\nint flag_w = 300;\nint flag_h = 200;\nnum circle_x = flag_w / 4;\nnum circle_y = flag_h / 4;\n\nvoid main() {\n    //將 canvas 與 ctx 變數設計為全域變數, 表示有效範圍擴及整個程式\n    // 但是若宣告與複製分兩段且位於同一 block 區段, 就會產生重複宣告變數的錯誤, 所以這裡採宣告後直接賦值\n  canvas = querySelector(\'#canvas\');\n  ctx = canvas.getContext(\'2d\');\n\n\n  querySelector("#usa").onClick.listen((e) => drawUSA(ctx));\n  querySelector("#button").onClick.listen((e) => clearCanvas());\n}\n\nvoid drawUSA(ctx){\n    \n//先繪製滿地紅\n  ctx.clearRect(0, 0, flag_w, flag_h);\n  ctx.fillStyle = \'rgb(255, 0, 0)\';\n  ctx.fillRect(0, 0, flag_w, flag_h);\n    //採用座標，並開始繪製白色條紋\n  ctx.fillStyle = \'rgb(255, 255, 255)\';\n  ctx.fillRect(0, 15.4, flag_w / 1, flag_h / 13);\n  ctx.fillStyle = \'rgb(255, 255, 255)\';\n  ctx.fillRect(0, 46.2, flag_w / 1, flag_h / 13);\n  ctx.fillStyle = \'rgb(255, 255, 255)\';\n  ctx.fillRect(0, 77.2, flag_w / 1, flag_h / 13);\n  ctx.fillStyle = \'rgb(255, 255, 255)\';\n  ctx.fillRect(0, 108.0, flag_w / 1, flag_h / 13);\n  ctx.fillStyle = \'rgb(255, 255, 255)\';\n  ctx.fillRect(0, 138.8, flag_w / 1, flag_h / 13);\n  ctx.fillStyle = \'rgb(255, 255, 255)\';\n  ctx.fillRect(0, 169.6, flag_w / 1, flag_h / 13);\n  ctx.fillStyle = \'rgb(255, 255, 255)\';\n  ctx.fillRect(0, 200.4, flag_w / 1, flag_h / 13);\n  ctx.fillStyle = \'rgb(0, 0, 150)\';\n  ctx.fillRect(0, 0, flag_w / 2, flag_h / 1.9);\n    num b = flag_h/18;\n  ctx.font = "10px Arial";\n  //最後在繪製五芒星\n  ctx.strokeStyle = \'rgb(255, 255, 255)\';\n  ctx.strokeText("✮      ✮      ✮      ✮      ✮      ✮", flag_w / 36,12);\n  ctx.strokeText("✮      ✮      ✮      ✮      ✮", flag_w / 14, b*2);\n  ctx.strokeText("✮      ✮      ✮      ✮      ✮      ✮", flag_w / 36, b*3);\n  ctx.strokeText("✮      ✮      ✮      ✮      ✮", flag_w / 14, b*4);\n  ctx.strokeText("✮      ✮      ✮      ✮      ✮      ✮", flag_w / 36, b*5);\n  ctx.strokeText("✮      ✮      ✮      ✮      ✮", flag_w / 14, b*6);\n  ctx.strokeText("✮      ✮      ✮      ✮      ✮      ✮", flag_w / 36, b*7);\n   ctx.strokeText("✮      ✮      ✮      ✮      ✮", flag_w / 14, b*8);\n   ctx.strokeText("✮      ✮      ✮      ✮      ✮      ✮", flag_w / 36, b*9);\n\n\n}\n\n\nvoid clearCanvas(){\n  ctx.clearRect(0, 0, flag_w, flag_h);\n}\n \n \n', 'tags': '', 'url': 'W16 查驗考試.html'}, {'title': 'w17查驗考試', 'text': '題目一純 Dart 程式 \n 重量轉換 \n 題目二Html 程式 \n 重量轉換 \n 題目四繪製國旗 \n 各國國旗 \n  內建放入的 Dart 原始碼  \n 放大   回復 \n \n 題目三輸入重量 \n 請輸入所要轉換的重量 以數字加上 kg 或 lb:     轉換結果: \n \n 題目四繪製國旗 \n \n Clear Canvas   Draw Cuba   Draw CHINA   Draw SAN   Draw USA   Draw UK   Draw Canada \n', 'tags': '', 'url': 'w17查驗考試.html'}, {'title': '期中報告影片', 'text': '', 'tags': '', 'url': '期中報告影片.html'}]};